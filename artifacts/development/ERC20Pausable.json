{
  "contractName": "ERC20Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20Pausable adds the ability to pause ERC20 compliant template      used by the ERC20Template contract for pausing the contract.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"approve     Standard ERC20 approve function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"spender\":\"refers to an address that is allowed to spend tokens.\",\"value\":\"refers to amount of tokens that could be spent.\"},\"return\":\"true if approval is success, false otherwise.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"decreaseAllowance     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"spender\":\"refers to an address that is allowed to spend tokens.\",\"subtractedValue\":\"refers to an subtracted amount of tokens that could be spent.\"},\"return\":\"true if allowance is decreased successfully, false otherwise.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"increaseAllowance     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"addedValue\":\"refers to an added amount of tokens that could be spent.\",\"spender\":\"refers to an address that is allowed to spend tokens.\"},\"return\":\"true if allowance is increased successfully, false otherwise.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"transfer     Standard ERC20 transfer function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"to\":\"refers to an address that tokens are tranfered to.\",\"value\":\"refers to amount of tokens being tranfered.\"},\"return\":\"true if transfer is success, false otherwise.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"transfer     Standard ERC20 transferFrom function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"from\":\"refers to an address that tokens are tranfered from.\",\"to\":\"refers to an address that tokens are tranfered to.\",\"value\":\"refers to amount of tokens being tranfered.\"},\"return\":\"true if transfer is success, false otherwise.\"}},\"title\":\"ERC20Pausable \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ahmedali/Desktop/work/Ocean/ocean-contracts/contracts/templates/token/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ahmedali/Desktop/work/Ocean/ocean-contracts/contracts/templates/token/ERC20Pausable.sol\":{\"keccak256\":\"0x70539d62cb1c1190e4a8e994eb8cf7ba73a0c1e5b7ff99611befbddf27e76b0c\",\"urls\":[\"bzzr://07e91a46770dfc5c6f29d00d48f602e103341b628a38b7b2fc66f7bd26c7878f\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzzr://6200c125af376381ae6c5415b8f3c1cb83889be20a7a51d67ac607487a10313b\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600360006101000a81548160ff0219169083151502179055506110de8061002e6000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a082311461021a578063a457c2d714610272578063a9059cbb146102d8578063dd62ed3e1461033e576100a5565b8063095ea7b3146100aa57806318160ddd1461011057806323b872dd1461012e57806339509351146101b4575b600080fd5b6100f6600480360360408110156100c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103b6565b604051808215151515815260200191505060405180910390f35b610118610430565b6040518082815260200191505060405180910390f35b61019a6004803603606081101561014457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061043a565b604051808215151515815260200191505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104b6565b604051808215151515815260200191505060405180910390f35b61025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610530565b6040518082815260200191505060405180910390f35b6102be6004803603604081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610578565b604051808215151515815260200191505060405180910390f35b610324600480360360408110156102ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105f2565b604051808215151515815260200191505060405180910390f35b6103a06004803603604081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066c565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900460ff161561041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b61042883836106f3565b905092915050565b6000600254905090565b6000600360009054906101000a900460ff16156104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b6104ad848484610711565b90509392505050565b6000600360009054906101000a900460ff161561051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b61052883836107ea565b905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900460ff16156105e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b6105ea838361089d565b905092915050565b6000600360009054906101000a900460ff161561065a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b610664838361096a565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610707610700610988565b8484610990565b6001905092915050565b600061071e848484610b87565b6107df8461072a610988565b6107da8560405180606001604052806028815260200161101d60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610790610988565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d9092919063ffffffff16565b610990565b600190509392505050565b60006108936107f7610988565b8461088e8560016000610808610988565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610efd90919063ffffffff16565b610990565b6001905092915050565b60006109606108aa610988565b8461095b8560405180606001604052806025815260200161108e60259139600160006108d4610988565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d9092919063ffffffff16565b610990565b6001905092915050565b600061097e610977610988565b8484610b87565b6001905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061106a6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd56022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110456025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610f866023913960400191505060405180910390fd5b610cfe81604051806060016040528060268152602001610ff7602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d91816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610efd90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610eea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610eaf578082015181840152602081019050610e94565b50505050905090810190601f168015610edc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e74726163742069732070617573656445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a723058208ddf909dd60d325154e7fe83f57afd16f1854ca0a9ad54641ce4e2e7098702890029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a082311461021a578063a457c2d714610272578063a9059cbb146102d8578063dd62ed3e1461033e576100a5565b8063095ea7b3146100aa57806318160ddd1461011057806323b872dd1461012e57806339509351146101b4575b600080fd5b6100f6600480360360408110156100c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103b6565b604051808215151515815260200191505060405180910390f35b610118610430565b6040518082815260200191505060405180910390f35b61019a6004803603606081101561014457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061043a565b604051808215151515815260200191505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104b6565b604051808215151515815260200191505060405180910390f35b61025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610530565b6040518082815260200191505060405180910390f35b6102be6004803603604081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610578565b604051808215151515815260200191505060405180910390f35b610324600480360360408110156102ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105f2565b604051808215151515815260200191505060405180910390f35b6103a06004803603604081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066c565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900460ff161561041e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b61042883836106f3565b905092915050565b6000600254905090565b6000600360009054906101000a900460ff16156104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b6104ad848484610711565b90509392505050565b6000600360009054906101000a900460ff161561051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b61052883836107ea565b905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360009054906101000a900460ff16156105e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b6105ea838361089d565b905092915050565b6000600360009054906101000a900460ff161561065a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fa9602c913960400191505060405180910390fd5b610664838361096a565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610707610700610988565b8484610990565b6001905092915050565b600061071e848484610b87565b6107df8461072a610988565b6107da8560405180606001604052806028815260200161101d60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610790610988565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d9092919063ffffffff16565b610990565b600190509392505050565b60006108936107f7610988565b8461088e8560016000610808610988565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610efd90919063ffffffff16565b610990565b6001905092915050565b60006109606108aa610988565b8461095b8560405180606001604052806025815260200161108e60259139600160006108d4610988565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d9092919063ffffffff16565b610990565b6001905092915050565b600061097e610977610988565b8484610b87565b6001905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061106a6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd56022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110456025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610f866023913960400191505060405180910390fd5b610cfe81604051806060016040528060268152602001610ff7602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e3d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d91816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610efd90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610eea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610eaf578082015181840152602081019050610e94565b50505050905090810190601f168015610edc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e74726163742069732070617573656445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a723058208ddf909dd60d325154e7fe83f57afd16f1854ca0a9ad54641ce4e2e7098702890029",
  "sourceMap": "426:3522:4:-;;;488:5;465:28;;;;;;;;;;;;;;;;;;;;426:3522;;;;;;",
  "deployedSourceMap": "426:3522:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:3522:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:193;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:193:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:89:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1819:222:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1819:222:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3048:223;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3048:223:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1706:108:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:108:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3713:233:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3713:233:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1186:185;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1186:185:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2230:132:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2230:132:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2423:193:4;2552:4;561:6;;;;;;;;;;;560:7;539:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:29;2594:7;2603:5;2580:13;:29::i;:::-;2573:36;;2423:193;;;;:::o;1559:89:9:-;1603:7;1629:12;;1622:19;;1559:89;:::o;1819:222:4:-;1971:4;561:6;;;;;;;;;;;560:7;539:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:35;2018:4;2024:2;2028:5;1999:18;:35::i;:::-;1992:42;;1819:222;;;;;:::o;3048:223::-;3192:4;561:6;;;;;;;;;;;560:7;539:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:44;3244:7;3253:10;3220:23;:44::i;:::-;3213:51;;3048:223;;;;:::o;1706:108:9:-;1763:7;1789:9;:18;1799:7;1789:18;;;;;;;;;;;;;;;;1782:25;;1706:108;;;:::o;3713:233:4:-;3862:4;561:6;;;;;;;;;;;560:7;539:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3890:49;3914:7;3923:15;3890:23;:49::i;:::-;3883:56;;3713:233;;;;:::o;1186:185::-;1311:4;561:6;;;;;;;;;;;560:7;539:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:25;1354:2;1358:5;1339:14;:25::i;:::-;1332:32;;1186:185;;;;:::o;2230:132:9:-;2302:7;2328:11;:18;2340:5;2328:18;;;;;;;;;;;;;;;:27;2347:7;2328:27;;;;;;;;;;;;;;;;2321:34;;2230:132;;;;:::o;2500:149::-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;2638:4;2631:11;;2500:149;;;;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:11;:19;3301:6;3289:19;;;;;;;;;;;;;;;:33;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3258:8;:121::i;:::-;3396:4;3389:11;;3107:300;;;;;:::o;3802:207::-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;3930:25;;;;;;;;;;;;;;;:34;3956:7;3930:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3898:8;:83::i;:::-;3998:4;3991:11;;3802:207;;;;:::o;4496:258::-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;4629:25;;;;;;;;;;;;;;;:34;4655:7;4629:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4597:8;:129::i;:::-;4743:4;4736:11;;4496:258;;;;:::o;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;:::-;2161:4;2154:11;;2017:155;;;;:::o;788:96:7:-;833:15;867:10;860:17;;788:96;:::o;7350:332:9:-;7460:1;7443:19;;:5;:19;;;;7435:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:1;7521:21;;:7;:21;;;;7513:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:6;7592:11;:18;7604:5;7592:18;;;;;;;;;;;;;;;:27;7611:7;7592:27;;;;;;;;;;;;;;;:36;;;;7659:7;7643:32;;7652:5;7643:32;;;7668:6;7643:32;;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;5343:1;5325:20;;:6;:20;;;;5317:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:1;5405:23;;:9;:23;;;;5397:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:9;:17;5509:6;5499:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5479:9;:17;5489:6;5479:17;;;;;;;;;;;;;;;:91;;;;5603:32;5628:6;5603:9;:20;5613:9;5603:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5580:9;:20;5590:9;5580:20;;;;;;;;;;;;;;;:55;;;;5667:9;5650:35;;5659:6;5650:35;;;5678:6;5650:35;;;;;;;;;;;;;;;;;;5228:464;;;:::o;1732:187:8:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o",
  "source": "pragma solidity ^0.5.7;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\n\n/**\n* @title ERC20Pausable\n*  \n* @dev ERC20Pausable adds the ability to pause ERC20 compliant template \n*      used by the ERC20Template contract for pausing the contract.\n*/\ncontract ERC20Pausable is ERC20 {\n\n    bool internal paused = false;\n    \n    modifier onlyNotPaused() {\n        require(\n            !paused,\n            'ERC20Pausable: this token contract is paused' \n        );\n        _;\n    }\n\n    modifier onlyPaused() {\n        require(\n            paused,\n            'ERC20Pausable: this token contract is not paused' \n        );\n        _;\n    }\n\n    /**\n     * @dev transfer\n     *      Standard ERC20 transfer function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param to refers to an address that tokens are tranfered to.\n     * @param value refers to amount of tokens being tranfered.\n     * @return true if transfer is success, false otherwise.\n     */\n    function transfer(\n        address to, \n        uint256 value\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.transfer(to, value);\n    }\n\n    /**\n     * @dev transfer\n     *      Standard ERC20 transferFrom function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param from refers to an address that tokens are tranfered from.\n     * @param to refers to an address that tokens are tranfered to.\n     * @param value refers to amount of tokens being tranfered.\n     * @return true if transfer is success, false otherwise.\n     */\n    function transferFrom(\n        address from, \n        address to, \n        uint256 value\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.transferFrom(from, to, value);\n    }\n\n    /**\n     * @dev approve\n     *      Standard ERC20 approve function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param spender refers to an address that is allowed to spend tokens.\n     * @param value refers to amount of tokens that could be spent.\n     * @return true if approval is success, false otherwise.\n     */\n    function approve(\n        address spender, \n        uint256 value\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.approve(spender, value);\n    }\n\n    /**\n     * @dev increaseAllowance\n     *      Standard ERC20 increaseAllowance function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param spender refers to an address that is allowed to spend tokens.\n     * @param addedValue refers to an added amount of tokens that could be spent.\n     * @return true if allowance is increased successfully, false otherwise.\n     */\n    function increaseAllowance(\n        address spender, \n        uint256 addedValue\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.increaseAllowance(spender, addedValue);\n    }\n\n    /**\n     * @dev decreaseAllowance\n     *      Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param spender refers to an address that is allowed to spend tokens.\n     * @param subtractedValue refers to an subtracted amount of tokens that could be spent.\n     * @return true if allowance is decreased successfully, false otherwise.\n     */\n    function decreaseAllowance(\n        address spender, \n        uint256 subtractedValue\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.decreaseAllowance(spender, subtractedValue);\n    }\n}",
  "sourcePath": "/Users/ahmedali/Desktop/work/Ocean/ocean-contracts/contracts/templates/token/ERC20Pausable.sol",
  "ast": {
    "absolutePath": "/Users/ahmedali/Desktop/work/Ocean/ocean-contracts/contracts/templates/token/ERC20Pausable.sol",
    "exportedSymbols": {
      "ERC20Pausable": [
        679
      ]
    },
    "id": 680,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 560,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 561,
        "nodeType": "ImportDirective",
        "scope": 680,
        "sourceUnit": 1427,
        "src": "186:63:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 562,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1426,
              "src": "452:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1426",
                "typeString": "contract ERC20"
              }
            },
            "id": 563,
            "nodeType": "InheritanceSpecifier",
            "src": "452:5:4"
          }
        ],
        "contractDependencies": [
          834,
          1426,
          1495
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Pausable\n \n@dev ERC20Pausable adds the ability to pause ERC20 compliant template \n     used by the ERC20Template contract for pausing the contract.",
        "fullyImplemented": true,
        "id": 679,
        "linearizedBaseContracts": [
          679,
          1426,
          1495,
          834
        ],
        "name": "ERC20Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 566,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 679,
            "src": "465:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 564,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "465:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 565,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "488:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "529:127:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "560:7:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 569,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "561:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e747261637420697320706175736564",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:46:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        },
                        "value": "ERC20Pausable: this token contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        }
                      ],
                      "id": 568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1513,
                        1514
                      ],
                      "referencedDeclaration": 1514,
                      "src": "539:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:99:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "539:99:4"
                },
                {
                  "id": 574,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 576,
            "name": "onlyNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:4"
            },
            "src": "504:152:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "684:130:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "715:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e7472616374206973206e6f7420706175736564",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:50:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        },
                        "value": "ERC20Pausable: this token contract is not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1513,
                        1514
                      ],
                      "referencedDeclaration": 1514,
                      "src": "694:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:102:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "694:102:4"
                },
                {
                  "id": 583,
                  "nodeType": "PlaceholderStatement",
                  "src": "806:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 585,
            "name": "onlyPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:4"
            },
            "src": "662:152:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "1322:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "1354:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "1358:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 596,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1339:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1084,
                      "src": "1339:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 595,
                  "id": 601,
                  "nodeType": "Return",
                  "src": "1332:32:4"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transfer function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 592,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 591,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "1279:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1279:13:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1213:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1234:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:50:4"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1311:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1310:6:4"
            },
            "scope": 679,
            "src": "1186:185:4",
            "stateMutability": "nonpayable",
            "superFunction": 1084,
            "visibility": "public"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "1982:59:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "2018:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "2024:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2028:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1999:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1155,
                      "src": "1999:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 615,
                  "id": 622,
                  "nodeType": "Return",
                  "src": "1992:42:4"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transferFrom function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param from refers to an address that tokens are tranfered from.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 612,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 611,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "1939:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1939:13:4"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1850:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1873:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 609,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1894:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:73:4"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1971:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1970:6:4"
            },
            "scope": 679,
            "src": "1819:222:4",
            "stateMutability": "nonpayable",
            "superFunction": 1155,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "2563:53:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 637,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2594:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "2603:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "2580:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1119,
                      "src": "2580:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 634,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "2573:36:4"
                }
              ]
            },
            "documentation": "@dev approve\n     Standard ERC20 approve function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param value refers to amount of tokens that could be spent.\n@return true if approval is success, false otherwise.",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 631,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 630,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "2520:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2520:13:4"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2449:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2475:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:55:4"
            },
            "returnParameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2552:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:4"
            },
            "scope": 679,
            "src": "2423:193:4",
            "stateMutability": "nonpayable",
            "superFunction": 1119,
            "visibility": "public"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "3203:68:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "3244:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "addedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "3253:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "3220:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "3220:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 652,
                  "id": 658,
                  "nodeType": "Return",
                  "src": "3213:51:4"
                }
              ]
            },
            "documentation": "@dev increaseAllowance\n     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param addedValue refers to an added amount of tokens that could be spent.\n@return true if allowance is increased successfully, false otherwise.",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 648,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "3160:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3160:13:4"
              }
            ],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3084:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3110:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3074:60:4"
            },
            "returnParameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3192:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3191:6:4"
            },
            "scope": 679,
            "src": "3048:223:4",
            "stateMutability": "nonpayable",
            "superFunction": 1182,
            "visibility": "public"
          },
          {
            "body": {
              "id": 677,
              "nodeType": "Block",
              "src": "3873:73:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "3914:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "subtractedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "3923:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 671,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "3890:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "3890:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3890:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 670,
                  "id": 676,
                  "nodeType": "Return",
                  "src": "3883:56:4"
                }
              ]
            },
            "documentation": "@dev decreaseAllowance\n     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param subtractedValue refers to an subtracted amount of tokens that could be spent.\n@return true if allowance is decreased successfully, false otherwise.",
            "id": 678,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 667,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 666,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "3830:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3830:13:4"
              }
            ],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "3749:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "3775:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3739:65:4"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "3862:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3861:6:4"
            },
            "scope": 679,
            "src": "3713:233:4",
            "stateMutability": "nonpayable",
            "superFunction": 1210,
            "visibility": "public"
          }
        ],
        "scope": 680,
        "src": "426:3522:4"
      }
    ],
    "src": "0:3948:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/ahmedali/Desktop/work/Ocean/ocean-contracts/contracts/templates/token/ERC20Pausable.sol",
    "exportedSymbols": {
      "ERC20Pausable": [
        679
      ]
    },
    "id": 680,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 560,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 561,
        "nodeType": "ImportDirective",
        "scope": 680,
        "sourceUnit": 1427,
        "src": "186:63:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 562,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1426,
              "src": "452:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1426",
                "typeString": "contract ERC20"
              }
            },
            "id": 563,
            "nodeType": "InheritanceSpecifier",
            "src": "452:5:4"
          }
        ],
        "contractDependencies": [
          834,
          1426,
          1495
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Pausable\n \n@dev ERC20Pausable adds the ability to pause ERC20 compliant template \n     used by the ERC20Template contract for pausing the contract.",
        "fullyImplemented": true,
        "id": 679,
        "linearizedBaseContracts": [
          679,
          1426,
          1495,
          834
        ],
        "name": "ERC20Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 566,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 679,
            "src": "465:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 564,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "465:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 565,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "488:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "529:127:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "560:7:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 569,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "561:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e747261637420697320706175736564",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:46:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        },
                        "value": "ERC20Pausable: this token contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        }
                      ],
                      "id": 568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1513,
                        1514
                      ],
                      "referencedDeclaration": 1514,
                      "src": "539:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:99:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "539:99:4"
                },
                {
                  "id": 574,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 576,
            "name": "onlyNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:4"
            },
            "src": "504:152:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "684:130:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "715:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e7472616374206973206e6f7420706175736564",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:50:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        },
                        "value": "ERC20Pausable: this token contract is not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1513,
                        1514
                      ],
                      "referencedDeclaration": 1514,
                      "src": "694:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:102:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "694:102:4"
                },
                {
                  "id": 583,
                  "nodeType": "PlaceholderStatement",
                  "src": "806:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 585,
            "name": "onlyPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:4"
            },
            "src": "662:152:4",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "1322:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "1354:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "1358:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 596,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1339:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1084,
                      "src": "1339:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 595,
                  "id": 601,
                  "nodeType": "Return",
                  "src": "1332:32:4"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transfer function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 592,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 591,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "1279:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1279:13:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1213:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1234:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:50:4"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1311:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1310:6:4"
            },
            "scope": 679,
            "src": "1186:185:4",
            "stateMutability": "nonpayable",
            "superFunction": 1084,
            "visibility": "public"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "1982:59:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "2018:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "2024:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2028:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1999:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1155,
                      "src": "1999:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 615,
                  "id": 622,
                  "nodeType": "Return",
                  "src": "1992:42:4"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transferFrom function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param from refers to an address that tokens are tranfered from.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 612,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 611,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "1939:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1939:13:4"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1850:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1873:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 609,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1894:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:73:4"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "1971:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1970:6:4"
            },
            "scope": 679,
            "src": "1819:222:4",
            "stateMutability": "nonpayable",
            "superFunction": 1155,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "2563:53:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 637,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2594:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "2603:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "2580:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1119,
                      "src": "2580:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 634,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "2573:36:4"
                }
              ]
            },
            "documentation": "@dev approve\n     Standard ERC20 approve function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param value refers to amount of tokens that could be spent.\n@return true if approval is success, false otherwise.",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 631,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 630,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "2520:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2520:13:4"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2449:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2475:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:55:4"
            },
            "returnParameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2552:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:4"
            },
            "scope": 679,
            "src": "2423:193:4",
            "stateMutability": "nonpayable",
            "superFunction": 1119,
            "visibility": "public"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "3203:68:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "3244:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "addedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "3253:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "3220:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "3220:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 652,
                  "id": 658,
                  "nodeType": "Return",
                  "src": "3213:51:4"
                }
              ]
            },
            "documentation": "@dev increaseAllowance\n     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param addedValue refers to an added amount of tokens that could be spent.\n@return true if allowance is increased successfully, false otherwise.",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 648,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "3160:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3160:13:4"
              }
            ],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3084:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3110:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3074:60:4"
            },
            "returnParameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3192:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3191:6:4"
            },
            "scope": 679,
            "src": "3048:223:4",
            "stateMutability": "nonpayable",
            "superFunction": 1182,
            "visibility": "public"
          },
          {
            "body": {
              "id": 677,
              "nodeType": "Block",
              "src": "3873:73:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "3914:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "subtractedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "3923:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 671,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "3890:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$679",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "3890:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3890:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 670,
                  "id": 676,
                  "nodeType": "Return",
                  "src": "3883:56:4"
                }
              ]
            },
            "documentation": "@dev decreaseAllowance\n     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param subtractedValue refers to an subtracted amount of tokens that could be spent.\n@return true if allowance is decreased successfully, false otherwise.",
            "id": 678,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 667,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 666,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "3830:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3830:13:4"
              }
            ],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "3749:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "3775:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3739:65:4"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "3862:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3861:6:4"
            },
            "scope": 679,
            "src": "3713:233:4",
            "stateMutability": "nonpayable",
            "superFunction": 1210,
            "visibility": "public"
          }
        ],
        "scope": 680,
        "src": "426:3522:4"
      }
    ],
    "src": "0:3948:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-10T09:08:15.789Z",
  "devdoc": {
    "details": "ERC20Pausable adds the ability to pause ERC20 compliant template      used by the ERC20Template contract for pausing the contract.",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "approve     Standard ERC20 approve function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "spender": "refers to an address that is allowed to spend tokens.",
          "value": "refers to amount of tokens that could be spent."
        },
        "return": "true if approval is success, false otherwise."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "decreaseAllowance     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "spender": "refers to an address that is allowed to spend tokens.",
          "subtractedValue": "refers to an subtracted amount of tokens that could be spent."
        },
        "return": "true if allowance is decreased successfully, false otherwise."
      },
      "increaseAllowance(address,uint256)": {
        "details": "increaseAllowance     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "addedValue": "refers to an added amount of tokens that could be spent.",
          "spender": "refers to an address that is allowed to spend tokens."
        },
        "return": "true if allowance is increased successfully, false otherwise."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "transfer     Standard ERC20 transfer function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "to": "refers to an address that tokens are tranfered to.",
          "value": "refers to amount of tokens being tranfered."
        },
        "return": "true if transfer is success, false otherwise."
      },
      "transferFrom(address,address,uint256)": {
        "details": "transfer     Standard ERC20 transferFrom function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "from": "refers to an address that tokens are tranfered from.",
          "to": "refers to an address that tokens are tranfered to.",
          "value": "refers to amount of tokens being tranfered."
        },
        "return": "true if transfer is success, false otherwise."
      }
    },
    "title": "ERC20Pausable "
  },
  "userdoc": {
    "methods": {}
  }
}